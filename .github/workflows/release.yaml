name: release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  validate:
    uses: ./.github/workflows/validate.yaml

  parse_tag:
    runs-on: ubuntu-22.04
    outputs:
      is_stable_version: ${{ steps.parse.outputs.is_stable_version }}
    steps:
      - id: parse
        run: echo "is_stable_version=$([[ $GITHUB_REF =~ ^refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+$ ]] && echo true || echo false)" >> $GITHUB_OUTPUT

  pypi:
    needs: validate
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade poetry
          poetry install
      - run: poetry build
      - uses: actions/upload-artifact@v3
        with:
          name: pypi
          path: dist/*
          if-no-files-found: error
      - uses: pypa/gh-action-pypi-publish@release/v1

  brew:
    # the Formula references the rclip package published to PyPI
    needs: [validate, parse_tag, pypi]
    if: needs.parse_tag.outputs.is_stable_version == 'true'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade poetry
          poetry install
      - name: Setup git
        run: |
          git config --global user.email "zhibot.gh@gmail.com"
          git config --global user.name "Zhi Bot"
      - run: make release-brew
        env:
          GITHUB_TOKEN: ${{ secrets.ZHIBOT_GITHUB_TOKEN }}

  snap:
    needs: [validate, parse_tag]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Configure git for "snapcraft remote-build"
        run: |
          git config --global user.email "yurij@mikhalevi.ch"
          git config --global user.name "Yurij Mikhalevich"
      - name: Setup launchpad creds
        run: |
          mkdir -p ~/.local/share/snapcraft/provider/launchpad
          echo "${{ secrets.LAUNCHPAD_CREDENTIALS }}" > ~/.local/share/snapcraft/provider/launchpad/credentials
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade poetry
          poetry install
      - name: Build wheel
        run: |
          poetry build
          mkdir snap/local
          cp -v dist/rclip-*.tar.gz snap/local
      - run: sudo snap install snapcraft --classic
      - run: snapcraft remote-build --launchpad-accept-public-upload
      - name: Validate built snap
        run: |
          sudo snap install rclip_*_amd64.snap --dangerous
          rclip cat
      - uses: actions/upload-artifact@v3
        with:
          name: snap
          path: rclip_*.snap
          if-no-files-found: error
      - name: Upload snaps to the beta channel
        run: |
          for snap in *.snap; do
            snapcraft upload --release=beta "$snap"
          done
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_LOGIN }}
      - name: Promote snaps to the stable channel
        if: needs.parse_tag.outputs.is_stable_version == 'true'
        run: snapcraft promote --from-channel=beta --to-channel=stable --yes rclip
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_LOGIN }}

  appimage:
    needs: validate
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up APPDIR for after_bundle
        run: echo "APPDIR=$PWD/AppDir" >> $GITHUB_ENV
      - name: Build AppImage
        uses: AppImageCrafters/build-appimage@v1.3
        with:
          recipe: './release-utils/appimage/appimage-builder.yml'
        env:
          APP_VERSION: ${{ github.ref_name }}
      - uses: actions/upload-artifact@v3
        with:
          name: appimage
          path: rclip-*.AppImage
          if-no-files-found: error

  windows:
    needs: validate
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade poetry
          poetry install
          poetry run pip install pyinstaller==5.13.2
      - run: make build-windows
      - name: Install InnoSetup
        run: |
          Invoke-WebRequest -URI https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe -OutFile is.exe
          ./is.exe /VERYSILENT
      - run: |
          & "C:/Program Files (x86)/Inno Setup 6/ISCC.exe" ./release-utils/windows/build-installer.iss
          mv release-utils/windows/Output/rclip.exe release-utils/windows/Output/rclip-${{ github.ref_name }}-installer.exe
      - uses: actions/upload-artifact@v3
        with:
          name: windows
          path: release-utils/windows/Output/rclip-*.exe
          if-no-files-found: error

  create_release:
    needs: [pypi, snap, appimage, windows, parse_tag]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: artifacts/
      - name: Generate Changelog
        run: |
          git fetch --unshallow
          PREVIOUS_TAG="$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))"
          CHANGELOG="$(git --no-pager log --pretty="format:- %s" $PREVIOUS_TAG..$GITHUB_REF_NAME)"
          echo $CHANGELOG > release_changelog.txt
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          artifacts: artifacts/pypi/rclip-*,artifacts/snap/rclip_*.snap,artifacts/appimage/rclip-*.AppImage,artifacts/windows/rclip-*.exe
          bodyFile: release_changelog.txt
          prerelease: ${{ needs.parse_tag.outputs.is_stable_version == 'false' }}
          token: ${{ secrets.GITHUB_TOKEN }}
